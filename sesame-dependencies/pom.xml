<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.coder</groupId>
  <artifactId>sesame-dependencies</artifactId>
  <version>1.0.0-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>${project.artifactId}</name>
  <description>基础Bom</description>
  <url>https://www.sesame.com</url>

  <properties>
    <!-- 统一依赖管理 -->
    <spring.boot.version>2.7.8</spring.boot.version>
    <spring.cloud.version>Greenwich.SR4</spring.cloud.version>

    <!-- Web 相关 -->
    <swagger-annotations.version>1.6.6</swagger-annotations.version>

    <!-- DB 相关 -->
    <mysql-connector-javas.version>8.0.28</mysql-connector-javas.version>
    <druid.version>1.2.8</druid.version>
    <mybatis-plus.version>3.5.2</mybatis-plus.version>
    <!-- DB代码生成器 -->
    <mybatis-plus-generator.version>3.5.2</mybatis-plus-generator.version>
    <velocity-engine-core.version>2.3</velocity-engine-core.version>
    <springfox-swagger2.version>2.9.2</springfox-swagger2.version>

    <dynamic-datasource.version>3.5.0</dynamic-datasource.version>
    <!-- cache -->
    <redisson.version>3.17.3</redisson.version>
    <!-- Config 配置中心相关 -->
    <apollo.version>1.9.2</apollo.version>
    <!-- Job 定时任务相关 -->
    <!-- 服务保障相关 -->

    <!-- 监控相关 -->

    <!-- Test 测试相关 -->

    <!-- Bpm 工作流相关 -->
    <flowable.version>6.7.0</flowable.version>
    <!-- 工具类相关 -->
    <hutool.version>5.6.1</hutool.version>
    <guava.version>30.1.1-jre</guava.version>
    <!-- 配置加解密 -->
    <jasypt-spring-boot-starter.version>3.0.4</jasypt-spring-boot-starter.version>

    <mapstruct.version>1.5.3.Final</mapstruct.version>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- 引入spring-boot-dependencies bom,注意 spring-boot-starter-parent引入的也是此bom-->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring.boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 引入spring cloud bom -->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring.cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- 第三方工具 -->
      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>${hutool.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>


      <!-- 生成api接口文档 -->
      <dependency>
        <groupId>io.swagger</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>

      <!-- DB相关 -->
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-connector-javas.version}</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid.version}</version>
      </dependency>
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>${mybatis-plus.version}</version>
      </dependency>

      <!-- 代码生成器，使用它解析表结构 -->
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-generator</artifactId>
        <version>${mybatis-plus-generator.version}</version>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.apache.velocity</groupId>
        <artifactId>velocity-engine-core</artifactId>
        <version>${velocity-engine-core.version}</version>
        <scope>compile</scope>
      </dependency>
      <!--Swagger-UI API文档生产工具(可不要)-->
      <dependency>
        <groupId>io.springfox</groupId>
        <artifactId>springfox-swagger2</artifactId>
        <version>${springfox-swagger2.version}</version>
      </dependency>
      <!-- 多数据源 -->
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>dynamic-datasource-spring-boot-starter</artifactId>
        <version>${dynamic-datasource.version}</version>
      </dependency>

      <dependency>
        <groupId>org.redisson</groupId>
        <artifactId>redisson-spring-boot-starter</artifactId>
        <version>${redisson.version}</version>
      </dependency>

      <!-- 引入 Apollo Client 库，实现内嵌的配置中心 -->
      <dependency>
        <groupId>com.ctrip.framework.apollo</groupId>
        <artifactId>apollo-client</artifactId>
        <version>${apollo.version}</version>
      </dependency>

      <!-- Job 定时任务相关 -->


      <!-- 消息队列相关 -->


      <!-- 服务保障相关 -->





      <!-- 监控相关 -->




      <!-- Test 测试相关 -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-test</artifactId>
        <version>${spring.boot.version}</version>
      </dependency>

      <!-- 工作流相关 -->


      <!-- 工作流相关 flowable -->
      <dependency>
        <groupId>org.flowable</groupId>
        <artifactId>flowable-spring-boot-starter-basic</artifactId>
        <version>${flowable.version}</version>
      </dependency>
      <dependency>
        <groupId>org.flowable</groupId>
        <artifactId>flowable-spring-boot-starter-actuator</artifactId>
        <version>${flowable.version}</version>
      </dependency>


      <!-- 对配置文件进行加解密 -->
      <dependency>
        <groupId>com.github.ulisesbocchio</groupId>
        <artifactId>jasypt-spring-boot-starter</artifactId>
        <version>${jasypt-spring-boot-starter.version}</version>
      </dependency>

      <!-- use mapstruct-jdk8 for Java 8 or higher -->
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-jdk8</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${mapstruct.version}</version>
      </dependency>

      <!-- 三方云服务相关 -->

      <!-- SMS SDK begin -->

      <!-- 社交登陆（例如说，个人微信、企业微信等等） -->

    </dependencies>
  </dependencyManagement>
</project>
